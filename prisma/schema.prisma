generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

// model UserApiLimit {
//   id        String   @id @default(cuid())
//   userId    String   @unique
//   count     Int      @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model ChatMessage {
  id       Int      @id @default(autoincrement())
  role     String
  content  String
  createdAt DateTime @default(now())
  userId   String   @map(name: "user_id") @unique // Add @index here
  UserApiLimit UserApiLimit @relation(fields: [userId], references: [userId])
}


model UserApiLimit {
  id        String   @id @default(cuid())
  userId    String   @unique
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ChatMessages ChatMessage[]
}
model UserSubscription {
  id        String      @id @default(cuid())
  userId    String   @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

// npx prisma db push // первоначально за ПУШИЛИ схему
// npx prisma generate // Пере генерируем если что то измен
// npx prisma studio  // смотрим модели
// --------------------------------------------------------------
// npx prisma migrate reset // сброс базы данных
// после сброса в видео в такой последю Но не сработало
// 1. npx prisma generate
// 2. npx prisma db push

// в такой последовательности сработало
// npx prisma migrate reset
// npx prisma db push 